{"version":3,"sources":["bmiCalculator.js"],"names":["calculateBMI","height","weight","heightUnit","document","getElementById","value","weightUnit","calculateButton","weightInput","heightInput","heightCm","inchesToCm","weightKg","poundsToKg","heightM","bmi","inches","pounds","getBMICategory","module","exports"],"mappings":"AACA,SAASA,YAAYA,CAACC,MAAM,EAAEC,MAAM,EAAE;EAClC;EACA,IAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK;EAC9D,IAAMC,UAAU,GAAGH,QAAQ,CAACC,cAAc,CAAC,YAAY,CAAC,CAACC,KAAK;;EAE9D;EACA,IAAME,eAAe,GAAGJ,QAAQ,CAACC,cAAc,CAAC,iBAAiB,CAAC;EAClE,IAAMI,WAAW,GAAGL,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;EACrD,IAAMK,WAAW,GAAGN,QAAQ,CAACC,cAAc,CAAC,QAAQ,CAAC;;EAErD;EACA;EACA;EACA;EACA;;EAEA;EACA,IAAIM,QAAQ;EACZ,IAAIR,UAAU,KAAK,IAAI,EAAE;IACrBQ,QAAQ,GAAGC,UAAU,CAACX,MAAM,CAAC;EACjC,CAAC,MAAM;IACHU,QAAQ,GAAGV,MAAM;EACrB;;EAEA;EACA,IAAIY,QAAQ;EACZ,IAAIN,UAAU,KAAK,IAAI,EAAE;IACrBM,QAAQ,GAAGC,UAAU,CAACZ,MAAM,CAAC;EACjC,CAAC,MAAM;IACHW,QAAQ,GAAGX,MAAM;EACrB;;EAEA;EACA,IAAMa,OAAO,GAAGJ,QAAQ,GAAG,GAAG;;EAE9B;EACA;EACA,IAAII,OAAO,KAAK,CAAC,EAAE;IACf,OAAO,CAAC;EACZ;EAEA,IAAMC,GAAG,GAAGH,QAAQ,IAAIE,OAAO,GAAGA,OAAO,CAAC;EAC1C,OAAOC,GAAG;AACd;AACA,SAASJ,UAAUA,CAACK,MAAM,EAAE;EACxB,OAAOA,MAAM,GAAG,IAAI;AACxB;AACA,SAASH,UAAUA,CAACI,MAAM,EAAE;EACxB,OAAOA,MAAM,GAAG,QAAQ;AAC5B;AACA,SAASC,cAAcA,CAACH,GAAG,EAAE;EACzB,IAAIA,GAAG,GAAG,IAAI,EAAE;IACZ,OAAO,aAAa;EACxB,CAAC,MAAM,IAAIA,GAAG,GAAG,IAAI,EAAE;IACnB,OAAO,eAAe;EAC1B,CAAC,MAAM,IAAIA,GAAG,GAAG,IAAI,EAAE;IACnB,OAAO,YAAY;EACvB,CAAC,MAAM;IACH,OAAO,SAAS;EACpB;AACJ;AAEAI,MAAM,CAACC,OAAO,GAAG;EAAErB,YAAY,EAAZA,YAAY;EAAEmB,cAAc,EAAdA;AAAe,CAAC","file":"bmiCalculator.4eb0df73.js","sourceRoot":"..\\..\\src\\public","sourcesContent":["\r\nfunction calculateBMI(height, weight) {\r\n    // get units\r\n    const heightUnit = document.getElementById('heightUnit').value;\r\n    const weightUnit = document.getElementById('weightUnit').value;\r\n\r\n    // get the calculate button\r\n    const calculateButton = document.getElementById('calculateButton');\r\n    const weightInput = document.getElementById('weight');\r\n    const heightInput = document.getElementById('height');\r\n\r\n    // validate inputs\r\n    // if (height === '' || weight === '') {\r\n    //     calculateButton.disabled = true;\r\n    //     return 0;\r\n    // }\r\n    \r\n    // convert height to meters\r\n    let heightCm;\r\n    if (heightUnit === 'in') {\r\n        heightCm = inchesToCm(height);\r\n    } else {\r\n        heightCm = height;\r\n    }\r\n\r\n    // convert weight to kg\r\n    let weightKg;\r\n    if (weightUnit === 'lb') {\r\n        weightKg = poundsToKg(weight);\r\n    } else {\r\n        weightKg = weight;\r\n    }\r\n\r\n    // calculate BMI\r\n    const heightM = heightCm / 100; \r\n\r\n    // BMI = weight (kg) / height (m) ^ 2\r\n    // prevent division by zero\r\n    if (heightM === 0) {\r\n        return 0;\r\n    }\r\n\r\n    const bmi = weightKg / (heightM * heightM);\r\n    return bmi;\r\n}\r\nfunction inchesToCm(inches) {\r\n    return inches * 2.54;\r\n}\r\nfunction poundsToKg(pounds) {\r\n    return pounds * 0.453592;\r\n}\r\nfunction getBMICategory(bmi) {\r\n    if (bmi < 18.5) {\r\n        return 'Underweight';\r\n    } else if (bmi < 24.9) {\r\n        return 'Normal weight';\r\n    } else if (bmi < 29.9) {\r\n        return 'Overweight';\r\n    } else {\r\n        return 'Obesity';\r\n    }\r\n}\r\n\r\nmodule.exports = { calculateBMI, getBMICategory };"]}